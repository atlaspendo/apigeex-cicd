# File: .github/workflows/validate_inputs.yml
name: Validate Deployment Inputs

on:
  workflow_call:
    inputs:
      environment_group:
        required: true
        type: string
      environment_type:
        required: true
        type: string
      is_production:
        required: true
        type: boolean
      non_prod_revision:
        required: false
        type: string
    outputs:
      can_proceed:
        description: "Whether the deployment can proceed"
        value: ${{ jobs.validate.outputs.can_proceed }}
      deployment_type:
        description: "Type of deployment"
        value: ${{ jobs.validate.outputs.deployment_type }}
      deployment_status:
        description: "Status of the validation"
        value: ${{ jobs.validate.outputs.deployment_status }}
      environment:
        description: "Target environment"
        value: ${{ jobs.validate.outputs.environment }}

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      can_proceed: ${{ steps.validate.outputs.can_proceed }}
      deployment_type: ${{ steps.validate.outputs.deployment_type }}
      deployment_status: ${{ steps.validate.outputs.deployment_status }}
      environment: ${{ steps.validate.outputs.environment }}
    steps:
      - name: Validate Environment Configuration
        id: validate
        run: |
          echo "::group::🔍 Validating Deployment Configuration"
          echo "Starting validation checks..."
          
          PROCEED=true
          DEPLOY_TYPE="non-prod"
          STATUS="pending"
          
          if [[ "${{ inputs.is_production }}" == "true" ]]; then
            if [[ -z "${{ inputs.non_prod_revision }}" ]]; then
              echo "❌ Error: Production deployment requires non_prod_revision"
              PROCEED=false
              STATUS="failed"
            else
              DEPLOY_TYPE="prod"
              echo "✅ Production deployment validated with revision ${{ inputs.non_prod_revision }}"
            fi
          fi
          
          case "${{ inputs.environment_group }}" in
            "default"|"edd"|"homerun"|"wow"|"wpay"|"prod")
              echo "✅ Environment group validation passed"
              ;;
            *)
              echo "❌ Error: Invalid environment group"
              PROCEED=false
              STATUS="failed"
              ;;
          esac
          
          case "${{ inputs.environment_type }}" in
            "dev"|"test-env"|"test"|"uat"|"prod")
              echo "✅ Environment type validation passed"
              echo "environment=${{ inputs.environment_type }}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "❌ Error: Invalid environment type"
              PROCEED=false
              STATUS="failed"
              ;;
          esac
          
          if [[ "$PROCEED" == "true" ]]; then
            STATUS="validated"
            echo "✅ All validation checks successfully passed"
          fi
          
          echo "can_proceed=$PROCEED" >> $GITHUB_OUTPUT
          echo "deployment_type=$DEPLOY_TYPE" >> $GITHUB_OUTPUT
          echo "deployment_status=$STATUS" >> $GITHUB_OUTPUT
          echo "::endgroup::"
